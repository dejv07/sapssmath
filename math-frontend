import { useEffect, useState } from 'react';
import { useRouter } from 'next/router';
import { Button, Input, Select } from '@/components/ui/button';
import { Card, CardContent } from '@/components/ui/card';

export default function Dashboard() {
  const [user, setUser] = useState(null);
  const [problems, setProblems] = useState([]);
  const [question, setQuestion] = useState('');
  const [answer, setAnswer] = useState('');
  const [difficulty, setDifficulty] = useState('easy');
  const router = useRouter();

  useEffect(() => {
    const token = localStorage.getItem('token');
    if (!token) {
      router.push('/');
      return;
    }
    
    fetch('https://sapssmath-1/math_problems', {
      headers: { Authorization: `Bearer ${token}` },
    })
      .then(res => res.json())
      .then(data => setProblems(data))
      .catch(() => router.push('/'));
    
    const payload = JSON.parse(atob(token.split('.')[1]));
    setUser(payload);
  }, [router]);

  const handleAddProblem = async () => {
    const token = localStorage.getItem('token');
    if (!token) return;
    
    const response = await fetch('https://sapssmath-1/math_problems', {
      method: 'POST',
      headers: {
        'Content-Type': 'application/json',
        Authorization: `Bearer ${token}`,
      },
      body: JSON.stringify({ question, answer, difficulty }),
    });
    
    if (response.ok) {
      setQuestion('');
      setAnswer('');
      setDifficulty('easy');
      const updatedProblems = await response.json();
      setProblems([...problems, updatedProblems]);
    }
  };

  return (
    <div className="p-6">
      <h1 className="text-2xl font-bold mb-4">Vítejte, {user?.username}</h1>
      <h2 className="text-xl mb-3">Seznam příkladů</h2>
      <div className="grid grid-cols-1 md:grid-cols-2 gap-4">
        {problems.map(problem => (
          <Card key={problem.id} className="p-4">
            <CardContent>
              <p className="text-lg font-semibold">{problem.question}</p>
              <p className="text-gray-600">Obtížnost: {problem.difficulty}</p>
              {user?.role === 'teacher' && <p className="text-gray-500">Správná odpověď: {problem.answer}</p>}
            </CardContent>
          </Card>
        ))}
      </div>
      {user?.role === 'teacher' && (
        <div className="mt-6">
          <h2 className="text-lg font-bold">Přidat nový příklad</h2>
          <Input placeholder="Zadání příkladu" value={question} onChange={(e) => setQuestion(e.target.value)} className="mb-3" />
          <Input placeholder="Správná odpověď" value={answer} onChange={(e) => setAnswer(e.target.value)} className="mb-3" />
          <Select value={difficulty} onChange={(e) => setDifficulty(e.target.value)} className="mb-3">
            <option value="easy">Lehká</option>
            <option value="medium">Střední</option>
            <option value="hard">Těžká</option>
          </Select>
          <Button onClick={handleAddProblem}>Přidat</Button>
        </div>
      )}
    </div>
  );
}
